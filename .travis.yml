# Travis CI Configuration with Slack Notifications
# This file combines the main Travis configuration with Slack notification settings
version: ~> 1.0

env:
  global:
    - HMD_HOME=$TRAVIS_BUILD_DIR

    # Oracle Account-specific environment variables
    - ORACLE_ACCOUNT_NAME="Oracle_Slim_Account"
    - ORACLE_HOST="oracle-db"
    - ORACLE_DBNAME="FREEPDB1"
    - ORACLE_DBPORT="1521"
    - ORACLE_DBUSER="SYSTEM"
    - ORACLE_DBPASS="Oracle123"

    # Postgres Account-specific environment variables
    - POSTGRES_ACCOUNT_NAME="Postgres_Slim_Account"
    - POSTGRES_HOST="postgres-db"
    - POSTGRES_DBNAME="snaplogic"
    - POSTGRES_DBPORT="5432"
    - POSTGRES_DBUSER="snaplogic"
    - POSTGRES_DBPASS="snaplogic"

    # SQL Server Account-specific environment variables
    - SQLSERVER_ACCOUNT_NAME="SQLServer_Slim_Account"
    - SQLSERVER_HOST="sqlserver-db"
    - SQLSERVER_DBNAME="TEST"
    - SQLSERVER_DBPORT="1433"
    - SQLSERVER_DBUSER="testuser"
    - SQLSERVER_DBPASS="Snaplogic123!"

    # MySQL Account-specific environment variables
    - MYSQL_ACCOUNT_NAME="MySQL_Slim_Account"
    - MYSQL_HOST="mysql-db"
    - MYSQL_DBNAME="TEST"
    - MYSQL_DBPORT="3306"
    - MYSQL_DBUSER="testuser"
    - MYSQL_DBPASS="snaplogic"

    # S3 Account-specific environment variables
    - S3_ACCOUNT_NAME="S3_Slim_Account"
    - S3_ENDPOINT="http://minio:9000"
    - S3_ACCESS_KEY="demouser"
    - S3_SECRET_KEY="demopassword"

    # JMS/ActiveMQ Account-specific environment variables
    - JMS_ACCOUNT_NAME="JMS_Slim_Account"
    - JMS_HOST="activemq"
    - JMS_PORT="61616"  # Internal container port remains the same
    - JMS_USERNAME="admin"
    - JMS_PASSWORD="admin"
    - JMS_CONNECTION_FACTORY="ConnectionFactory"
    - JMS_INITIAL_CONTEXT_FACTORY="org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory"
    - JMS_PROVIDER_URL="tcp://activemq:61616"  # Internal container communication
    - JMS_QUEUE_NAME="demo.queue"

    - RELEASE_BUILD_VERSION="main-33084"

dist: jammy
group: stable
language: python
python:
  - 3.12
services:
  - docker

branches:
  only:
    - main

before_script:
  # Clean up any processes using ports that might conflict
  - echo "üîç Checking for port conflicts..."
  - sudo netstat -tulpn | grep :5673 || echo "Port 5673 is free"
  - sudo netstat -tulpn | grep :61617 || echo "Port 61617 is free"
  - sudo netstat -tulpn | grep :61614 || echo "Port 61614 is free"
  - sudo fuser -k 5673/tcp || echo "No process killed on port 5673"
  - sudo fuser -k 61617/tcp || echo "No process killed on port 61617"
  - sudo fuser -k 61614/tcp || echo "No process killed on port 61614"
  - sleep 2
  - echo "üîçEnvironment Variables set up and creating .env file:"
  - chmod +x ./setup_env.sh # Make the script executable
  - ./setup_env.sh
  - chmod +x docker/scripts/*.sh # Make all docker setup scripts executable

install: skip

script:
  - make snaplogic-start-services
  - make robot-run-all-tests TAGS="oracle" PROJECT_SPACE_SETUP=True

jobs:
  include:
    - stage: test
      name: "Robot Framework Tests"
      script:
        - make snaplogic-start-services
        - make robot-run-all-tests TAGS="oracle" PROJECT_SPACE_SETUP=True

# After success/failure - can be used for additional notifications or cleanup
after_success:
  - echo "‚úÖ Build succeeded!"
  - echo "Test results are available in robot_output directory"

after_failure:
  - echo "‚ùå Build failed!"
  - echo "Checking logs for errors..."
  - docker ps -a
  - docker logs snaplogic-test-example-tools-container --tail 50 || true

# Slack Notifications Configuration
notifications:
  slack:
    rooms:
      - secure: "DYVuYTPjV1S87V+kucqpZT/IRwSRVxK3TEsifwsB1ZQqXMkBMBFPLTWDsu31wmQnzdn6A9NBUg52PyuwfF79oSFqCWMUMfKCgrCBzk5gcJJ05mrMQfV6NqngYCx8oMjuuiBDAWMn9OtvOmOA6zJM7CBa3RSOKxkMhDo3a6qYrHC1znzA0usxjalaLtQXU9R5CM4KydqWRBkwXb7TukSIbcpYUuZw+30INWZSC7TS1Ok9KTLUS3iWj3Ry9bpi61SIuY/OkQG+p19MR60ZCsRWgksc6fkKX5A4s6CzozJ8/QHAqeN5pX/wvES8DXM+S00UPY/XY5Qg6wrowJAPEfQx18qdAbqrD39cHpwOrE5lEhhEJcIDBFCMPRKPwPs1TSX2/mAcfLK5vF5TvJJ68OzR5X7gmgxVXV55H1fwE8xAPdkqdNFKm0hjK+fNDG5qfZ1sRCfSMzOVTDKtAgVJ7tIDN7bc7uTECgmHNUKy00fU8AIEKXAB59cH8W4aqvydzsj/w+cSajerqpcNV/kHI+524EDk2MzQwXtoOft8gAEwUlFH0qopKcVZWKoylRe4v3FTbzEyt1gP5SR8noPvxDv1y1/EdZlkx3YhpQc6Xaqs4CwGG1ZwNtahmnGkcPDqH4zO3Klk8cIpKMEsvnFXphY6yda5/IBiTjwrTaYldpNrfrA="
    on_success: always
    on_failure: always
    on_error: always
    on_pull_requests: false
    template:
      - "Build <%{build_url}|#%{build_number}> (<%{compare_url}|%{commit}>) of %{repository_slug}@%{branch}"
      - "by %{author} %{result} in %{duration}"
      - "Message: %{commit_message}"
      - "View results: %{build_url}"

# Cache Docker images and pip packages for faster builds
cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/docker

# Clean up
after_script:
  - make snaplogic-stop || true
